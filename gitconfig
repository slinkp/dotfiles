
[diff]
    #color = auto
    #colorMoved = default
    tool = difftastic

    # Better readability than default `myers`. Like `patience` but better
    algorithm = histogram

[difftool]
    prompt = false

[difftool "difftastic"]
    cmd = difft "$LOCAL" "$REMOTE"

[pager]
    difftool = true

[user]
	name = Paul Winkler
	email = slinkp@gmail.com

[branch]
	# do NOT track origin branch by default. That is the path to panicy fixing origin/master
	autosetupmerge = false
	# Do prefer pull via rebase on tracking branches
	autosetuprebase = always

[push]
    # Push current branch to remote branch of same name
	default = simple
	autoSetupRemote = true

[github]
	user = slinkp

[color]
	ui = true

[rebase]
    autosquash = true  # Enable squashing of --fixup commits

[rerere]
    # remembers how you resolved merge conflicts during a git rebase and
    # automatically resolves conflicts for you when it can.
    enabled = true

[alias]
    all = for-each-ref --format='%(refname:short) <- %(upstream:short)' refs/heads
    tree = log --graph --decorate --pretty=oneline --abbrev-commit
    please = push --force-with-lease --force-if-includes
    up = fetch --all --prune
    master = !bash -c 'echo "stashing any changes before update..." && git stash save && git checkout master && git fetch origin naster && git reset --hard origin/master'
    main = !bash -c 'echo "stashing any changes before update..." && git stash save && git checkout main && git fetch origin main && git reset --hard origin/main'
    st = status
	br = branch
	ci = commit
	co = checkout
	diff = diff --word-diff
	difftastic = difftool
	di = difftool
	dt = difftool
	dif = diff --word-diff
	difff = diff --word-diff
	dlog = "!f() { GIT_EXTERNAL_DIFF=difft git log -p --ext-diff; }; f"
	logtastic = dlog
	unmerged = !sh -c 'git log $1@{1}..$1@{0} "$@"'
	ls = log --pretty=format:\"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]\" --decorate --date=short
	lsv = "log --pretty=format:\"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]\" --decorate --date=short --numstat "
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset' --abbrev-commit
	oldest-ancestor = !bash -c 'diff -u <(git rev-list --first-parent \"${1:-master}\") <(git rev-list --first-parent \"${2:-HEAD}\") | sed -ne \"s/^ //p\" | head -1' -
	#ls = log --pretty=format:"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]" --decorate --date=short  # pretty one-line log with tags, branches and authors
	#lsv = log --pretty=format:"%C(yellow)%h %C(blue)%ad%C(red)%d %C(reset)%s%C(green) [%cn]" --decorate --date=short --numstat    # a verbose ls, shows changed files too
     branchpoint = merge-base
     mydiff = !bash -c 'git diff "$1"..."$2"'

	feap = fetch --all --prune
	co = checkout
	st = status
	br = branch
	jira-co = "!f() { b=$1; shift; { git branch && git branch -r ; } | awk -v rpat=^[^/]*/$b -v pat=^$b '$1 ~ pat || $1 ~ rpat { print ; exit ; }' | cut -d/ -f2 | xargs -I{} git co {} $@; }; f"
    cane = commit --amend --no-edit
	path = ls-files --full-name

[core]
    excludesfile = ~/.gitignore
    editor = emacsclient -a ''
    autocrlf = input
    autolf = input
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	ignorecase = true
	precomposeunicode = true

    pager = delta

[help]
	autocorrect = 1

[status]
	submoduleSummary = true

[init]
	defaultBranch = main

[include]
	path = /Users/paul/.config/dev/gitconfig


# git-delta config,
# used when not using difftastic / difftool

[merge]
    conflictstyle = zdiff3

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true  # use n and N to move between diff sections

# Credentials for github

[credential "https://github.com"]
	helper = 
	helper = !gh auth git-credential

[credential "https://gist.github.com"]
	helper = 
	helper = !gh auth git-credential


[transfer]
    # fetch or receive will abort in the case of a malformed object or a link to a nonexistent object.
    # And other stuff. Rare but can save your bacon apparently?
    # Via https://jvns.ca/blog/2024/02/16/popular-git-config-options/#fsckobjects-avoid-data-corruption
    fsckobjects = true
